@page "/article/{id:int}"
@using MedbaseBlazor.Models
@inject IApiRepository repository
@using Markdig

<PageTitle>Article</PageTitle>
<div class="container">
    <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Home</a></li>
            <li class="breadcrumb-item"><a href="/articles">Articles</a></li>
            <li class="breadcrumb-item active" aria-current="page">@Article.Title</li>
        </ol>
    </nav>
  <div class="container">
        @if (loading.Equals(true))
        {
            <LoadingComponent/>
        }
        else
        {

            <h1 class="mt-4 mb-3">
                @Article.Title
                <small>
                    by
                    <a href="#">@Article.Writer</a>
                </small>
            </h1>

            <div class="row">

                <!-- Post Content Column -->
                <div class="col-lg-8">

                    <!-- Preview Image -->
                    <img class="img-fluid rounded" src="@Article.ImageURL" alt="">

                    <hr>

                    <!-- Date/Time -->
                    <p>@Article.DatePosted.ToString("dddd, dd MMMM yyyy")</p>

                    <hr>

                    <!-- Post Content -->
                    <p class="font-italic">@Article.Summary</p>

                    <p>@((MarkupString)Markdown.ToHtml(Article.Body))</p>
                </div>

                <!-- Sidebar Widgets Column -->
                <div class="col-md-4">

                    <!-- Side Widget -->
                    <div class="card my-4">
                        <h5 class="card-header">More to read?</h5>
                        <div class="card-body">
                            Go back to <a class="ml-5" asp-action="Articles">Articles</a>.
                        </div>
                    </div>

                </div>

            </div>
        }
    </div>
</div>
@code {

    public Article Article { get; set; } = new();
    private bool loading;

    [Parameter]
    public int id { get; set; } = 0;

    protected async override Task OnParametersSetAsync()
    {
        if (id != 0)
        {
            loading = true;
            Article = await repository.GetArticle(id) ?? new();
            loading = false;
        }
    }
}
