@page "/topics/{courseRef}"
@using MedbaseBlazor.Models
@using MedbaseBlazor.Repositories
@inject IApiRepository repository

<PageTitle>Topics</PageTitle>


<div class="container mt-1">
    <div class="row gx-5 align-items-center justify-content-center">

        <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <li class="breadcrumb-item"><a href="/courses">Courses</a></li>
                <li class="breadcrumb-item active" aria-current="page">Topics</li>
            </ol>
        </nav>

        <div class="row">
            @if (!TopicsList.Any())
            {
                <LoadingComponent />
            }
            else
            {
                <Virtualize Items="TopicsList.ToList()" TItem="Topic" Context="item">
                    <ItemContent>
                        <div class="col-lg-4 mb-2">
                            <div class="card h-100 shadow border-0">
                                <div class="card-body p-4">
                                    <h5 class="card-title mb-3">
                                        @item.Name
                                    </h5>
                                    <div class="row text-center">
                                        <div class="col-6">
                                            <a class="btn btn-primary" href="@($"questions/{item.TopicRef}")">View😆</a>
                                        </div>
                                        <div class="col-6">
                                            <button class="btn btn-primary" @onclick="() => CustomiseQuiz(item.TopicRef)">
                                                Quiz🤔
                                            </button>
                                        </div>
                                    </div>
                                    <div class="container-fluid text-center border-0 shadow card-footer mt-2" style="display:@(showCustomisation.Equals(true) && topicToCustomise == item.TopicRef ? "block" : "none")">
                                        <h6 class="fw-bold">Customise Quiz🛠️z</h6>


                                        <div class="container text-center m-1">
                                                <button class="btn @(negativeMarking.Equals(true) ? "btn-primary" : "btn-outline-primary")" @onclick="ToggleNegativeMarking">
                                                    @(negativeMarking.Equals(true) ? "Negative Marking On" : "Negative Marking Off")
                                                </button>
                                        </div>
                                        <div class="row text-center align-content-center justify-content-center">
                                            <p class="col-auto">Number Of Questions</p>
                                            <input class="col-auto" type="number" max="10" min="1" @bind="numberOfQuestions" />
                                        </div>
                                        <a class="btn btn-primary" href="@($"/quiz/{item.TopicRef}/{numberOfQuestions}/{negativeMarking}")">
                                            Start!😛
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </ItemContent>
                </Virtualize>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string courseRef { get; set; } = "";
    bool showCustomisation = false;
    int topicToCustomise;
    private bool negativeMarking = false;
    private int numberOfQuestions = 1;

    private IEnumerable<Topic> TopicsList { get; set; } = Enumerable.Empty<Topic>();

    protected async override Task OnParametersSetAsync() => TopicsList = await repository.GetTopics(courseRef);

    private void ToggleNegativeMarking()
    {
        negativeMarking = !negativeMarking;
    }
    private void CustomiseQuiz(int reference)
    {
        topicToCustomise = reference;

        if (showCustomisation.Equals(false))
            showCustomisation = true;
        else if (showCustomisation.Equals(true))
            showCustomisation = false;
    }
}
