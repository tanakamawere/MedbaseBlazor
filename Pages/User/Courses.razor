@page "/courses"
@inject IApiRepository repository
@inject NavigationManager navManager;

<PageTitle>@title</PageTitle>
    <HeadContent>
        <title>@title</title>
    <meta name="title" content="@title" />
    <meta name="description" content="@description" />

    <!-- Open Graph / Facebook -->
    <meta name="og:type" content="website" />
    <meta name="og:url" content="@navManager.BaseUri" />
    <meta name="og:title" content="@title" />
    <meta name="og:description" content="@description" />
    <meta name="og:image" content="@image" />

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:url" content="@navManager.BaseUri" />
    <meta name="twitter:title" content="@title" />
    <meta name="twitter:description" content="@description" />
    <meta name="twitter:image" content="@image" />
</HeadContent>

<header>
    <div class="container my-5">
        <div class="row p-4 pb-0 pe-lg-0 pt-lg-5 align-items-center rounded-3 border shadow-lg">
            <div class="col-lg-7 p-3 p-lg-5 pt-lg-3">
                <MudBreadcrumbs Class="text-dark" Items="_items"></MudBreadcrumbs>
                <MudText Typo="Typo.h2" class="display-5 fw-bolder mb-2">
                    Courses🥙
                </MudText>
                <MudText class="fw-normal mb-4">
                    From preclinical to clinical, you will find all the courses you need here.
                </MudText>
            </div>
            <div class="col-lg-4 offset-lg-1 m-5">
                <img class="img-fluid bg-transparent" src="img/courses.png">
            </div>
        </div>
    </div>
</header>

<div class="container">

    @if (!CoursesList.Any())
    {
        <LoadingComponent />
    }
    else
    {
        <div class="row pt-5">
            @foreach (Course item in CoursesList)
            {
                <div class="col-6 col-lg-4 col-sm-6 mb-5">
                    <MudCard @onclick="() => GoToTopics(item.CourseRef)">
                        <MudCardMedia Image="@item.ImageURL" Height="300" />
                        <MudCardContent>
                            <MudText Typo="Typo.h6">
                                @item.Title
                            </MudText>
                            <MudText Typo="Typo.body2" Class="d-lg-block d-none">
                                @item.Description
                            </MudText>
                        </MudCardContent>
                    </MudCard>
                </div>

            }
        </div>
        
    }
</div>

@code {
    private IEnumerable<Course> CoursesList { get; set; } = Enumerable.Empty<Course>();


    private string description = "Choose the course you want to view notes or MCQs on";
    private string title = "Courses | Medbase";
    private string image = "https://i.postimg.cc/T1DjN4S5/Logo.png";


    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Home", href: "#", icon: Icons.Material.Filled.Home),
        new BreadcrumbItem("Courses", href: "/courses", icon: Icons.Material.Filled.Book)
    };



    protected override Task OnInitializedAsync() => GetArticlesAsync();

    private async Task GetArticlesAsync() => CoursesList = await repository.GetCourses();
    private void GoToTopics(string courseRef)
    {
        navManager.NavigateTo($"/topics/{courseRef}");
    }
}
