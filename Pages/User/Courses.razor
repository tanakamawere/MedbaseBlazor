@page "/courses"
@using MedbaseBlazor.Models
@using MedbaseBlazor.Repositories
@inject IApiRepository repository

<PageTitle>Courses</PageTitle>
<div class="container">

    <MudBreadcrumbs Items="_items"></MudBreadcrumbs>

    @if (!CoursesList.Any())
    {
        <LoadingComponent />
    }
    else
    {
        <div class="row">
            @foreach (Course item in CoursesList)
            {
                <div class="col-lg-4 col-sm-6 mb-5">
                    <MudCard>
                        <MudCardMedia Image="@item.ImageURL" Height="200" />
                        <MudCardContent>
                            <MudText Typo="Typo.h5">
                                @item.Title
                            </MudText>
                            <MudText Typo="Typo.body2">
                                @item.Description
                            </MudText>
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton Variant="Variant.Text" Color="Color.Primary" Href="@($"/topics/{item.CourseRef}")">Go To Course</MudButton>
                            <MudButton Variant="Variant.Text" Color="Color.Secondary">Share</MudButton>
                        </MudCardActions>
                    </MudCard>
                </div>

            }
        </div>
        
    }
</div>

@code {
    private IEnumerable<Course> CoursesList { get; set; } = Enumerable.Empty<Course>();

    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Home", href: "#", icon: Icons.Material.Filled.Home),
        new BreadcrumbItem("Courses", href: "/courses", icon: Icons.Material.Filled.Book)
    };

    protected override Task OnInitializedAsync() => GetArticlesAsync();

    private async Task GetArticlesAsync() => CoursesList = await repository.GetCourses();
}
