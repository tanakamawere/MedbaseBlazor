@page "/admin/courses"
@inject IApiRepository repository

<PageTitle>Courses</PageTitle>

<a class="btn btn-primary m-2" style="max-width:200px" href="@($"/admin/courses/add")">Add</a>
@if (!allCourses.Any())
{
    <div><em><strong>Loading...</strong></em></div>
}
else
{
    <table class="table table-bordered table-striped table-sm">
        <thead>
            <tr>
                <th>ID</th>
                <th>Course Reference</th>
                <th>Title</th>
                <th>Description</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Course item in allCourses)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.CourseRef</td>
                    <td>@item.Title</td>
                    <td>@item.Description</td>
                    <td>
                        <NavLink class="btn btn-info btn-sm" href="@($"/admin/courses/edit/{item.Id}")">
                            Edit
                        </NavLink>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    private IEnumerable<Course> allCourses { get; set; } = Enumerable.Empty<Course>();

    protected async override Task OnInitializedAsync() => await UpdatePage();

    private async Task UpdatePage()
    {
        allCourses = await repository.GetCourses();
    }
}
