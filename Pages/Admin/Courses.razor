@page "/admin/courses"
@page "/admin"
@layout AdminLayout
@inject IApiRepository repository

<PageTitle>Courses</PageTitle>

<a class="btn btn-primary m-2" style="max-width:200px" href="@($"/admin/courses/add")">Add</a>
@if (!allCourses.Any())
{
    <LoadingComponent />
}
else
{
    <MudTable Items="@allCourses" Hover="true" Breakpoint="Breakpoint.Sm" Loading="_loading" LoadingProgressColor="Color.Info">
        <HeaderContent>
            <MudTh>ID</MudTh>
            <MudTh>Course Ref</MudTh>
            <MudTh>Title</MudTh>
            <MudTh>Description</MudTh>
            <MudTh>Actions</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd HideSmall="true" DataLabel="ID">@context.Id</MudTd>
            <MudTd HideSmall="true" DataLabel="Course Ref">@context.CourseRef</MudTd>
            <MudTd DataLabel="Title">@context.Title</MudTd>
            <MudTd HideSmall="true" DataLabel="Description">@context.Description</MudTd>
            <MudTd DataLabel="Actions">
                <NavLink class="btn btn-info btn-sm" href="@($"/admin/courses/edit/{context.Id}")">
                    Edit
                </NavLink>
            </MudTd>
        </RowTemplate>
    </MudTable>
}
@code {
    private IEnumerable<Course> allCourses { get; set; } = Enumerable.Empty<Course>();

    private bool _loading;
    protected async override Task OnInitializedAsync() => await UpdatePage();

    private async Task UpdatePage()
    {
        allCourses = await repository.GetCourses();
    }
}
