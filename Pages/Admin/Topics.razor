@page "/admin/topics"
@layout AdminLayout
@inject IApiRepository repository

<PageTitle>Topics</PageTitle>

<a class="btn btn-primary m-2" style="max-width:200px" href="@GetAddTopicUrl()">Add</a>
@if (!allTopics.Any())
{
    <div><em><strong>Loading...</strong></em></div>
}
else
{

    <MudTable Items="@allTopics" Dense="true" Hover="true" Bordered="true" Striped="false">
        <ToolBarContent>
            <MudText Typo="Typo.h6">All Questions</MudText>
            <MudSpacer />
            <MudButton Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" Href="/admin/topics/add" />
        </ToolBarContent>
        <HeaderContent>
            <MudTh>ID</MudTh>
            <MudTh HideSmall="true" >Course Reference</MudTh>
            <MudTh HideSmall="true" >Topic Reference</MudTh>
            <MudTh>Name</MudTh>
            <MudTh>Actions</MudTh>
        </HeaderContent>
        <RowTemplate>

            <MudTh DataLabel="ID">@context.Id</MudTh>
            <MudTh HideSmall="true" DataLabel="CourseRef">@context.CourseRef</MudTh>
            <MudTh HideSmall="true" DataLabel="TopicRef">@context.TopicRef</MudTh>
            <MudTh DataLabel="Name">@context.Name</MudTh>
            <MudTh DataLabel="Actions">
                <NavLink class="btn btn-primary btn-sm" href="@GetQuestionsUrl(context.TopicRef)">
                    Questions
                </NavLink>
                <NavLink class="btn btn-info btn-sm" href="@GetEditTopicUrl(context.TopicRef)">
                    Edit
                </NavLink>
                <NavLink class="btn btn-dark btn-sm" href="@GetAddQuestionUrl(context.TopicRef)">
                    Add Question
                </NavLink>
            </MudTh>
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>
}


@code {
    public IEnumerable<Topic> allTopics { get; set; } = Enumerable.Empty<Topic>();

    protected override async Task OnInitializedAsync() => await UpdatePage();

    private async Task UpdatePage()
    {
        allTopics = await repository.GetAllTopics();
    }
    [Inject]
    public NavigationManager navigationManager { get; set; }

    public string GetQuestionsUrl(int id) => $"/admin/questions/{id}";
    public string GetAddTopicUrl() => "/admin/topics/add";
    public string GetEditTopicUrl(int id) => $"/admin/topics/edit/{id}";
    public string GetAddQuestionUrl(int id) => $"/admin/questions/editfromtopic/{id}";

    private void DeleteTopic(long id)
    {
        repository.DeleteTopic((int)id);
        navigationManager.NavigateTo("/admin/topics");
    }
}
