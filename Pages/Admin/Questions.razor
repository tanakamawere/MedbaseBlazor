@page "/admin/questions/{topicId:int}"
@page "/admin/questions"
@layout AdminLayout
@inject IApiRepository repository
@using MedbaseBlazor.Services

<PageTitle>Questions</PageTitle>


<div class="input-group m-4" style="max-width:30rem;">
        <InputNumber @bind-Value="searchEntry" DisplayName="searchInput" placeholder="Search by Id..." class="form-control"/>
        <button class="btn btn-primary" @onclick="() => SearchForInput()"><i class="oi oi-magnifying-glass"></i></button>
    </div>

@if (!questionsList.Any())
{
    <div><em><strong>Loading...</strong></em></div>
}
else
{
    <table class="table table-bordered table-striped table-sm">
        <thead>
            <tr>
                <th>ID</th>
                <th>Question</th>
                <th>ChildA</th>
                <th>ChildB</th>
                <th>ChildC</th>
                <th>ChildD</th>
                <th>ChildE</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Question item in questionsList)
            {

                <tr>
                    <td>@item.Id</td>
                    <td>@item.QuestionMain</td>
                    <td>@item.ChildA</td>
                    <td>@item.ChildB</td>
                    <td>@item.ChildC</td>
                    <td>@item.ChildD</td>
                    <td>@item.ChildE</td>
                    <td>
                        <NavLink class="btn btn-primary btn-sm" href="@GetQuestionDetailsUrl(item.Id)">
                            Details
                        </NavLink>
                        <NavLink class="btn btn-info btn-sm" href="@GetQuestionEditUrl(item.Id)">
                            Edit
                        </NavLink>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    public IEnumerable<Question> questionsList { get; set; } = Enumerable.Empty<Question>();
    private int? searchEntry;

    [Parameter]
    public int topicId { get; set; }


    public string GetQuestionDetailsUrl(int id) => $"/admin/questions/details/{id}";
    public string GetQuestionEditUrl(int id) => $"/admin/questions/edit/{id}";

    protected async override Task OnParametersSetAsync() => await GetAllQuestions(topicId);

    private async Task SearchForInput()
    {
        if (searchEntry == null || searchEntry == 0)
            await GetAllQuestions(topicId);
        else
        {
            questionsList = questionsList.Where(x => x.Id == searchEntry).ToList();
        }
    }
    private async Task GetAllQuestions(int topic)
    {
        if (topic.Equals(0))
            questionsList = await repository.GetAllQuestions();
        else
            questionsList = await repository.GetQuestionsSimple((long)topicId);
    }
}
