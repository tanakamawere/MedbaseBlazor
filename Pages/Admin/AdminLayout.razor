@inherits LayoutComponentBase

<PageTitle>Medbase Admin</PageTitle>
<HeadContent>
    <meta name="robots" content="noindex,nofollow">
</HeadContent>

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Medbase Admin</MudText>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <MudNavMenu Bordered="true">

            <MudNavLink Href="/admin/courses" Icon="@Icons.Material.Filled.Book">Courses</MudNavLink>
            <MudNavLink Href="/admin/topics" Icon="@Icons.Material.Filled.LibraryBooks">Topics</MudNavLink>
            <MudNavLink Href="/admin/notes" Icon="@Icons.Material.Filled.Note">Notes</MudNavLink>
            <MudNavLink Href="/admin/essays" Icon="@Icons.Material.Filled.WrapText">Essays</MudNavLink>
            <MudNavLink Href="/admin/Questions" Icon="@Icons.Material.Filled.QuestionAnswer">Questions</MudNavLink>
            <MudNavLink Href="/admin/corrections" Icon="@Icons.Material.Filled.QuestionMark">Corrections</MudNavLink>
            <MudNavLink Href="/admin/Articles" Icon="@Icons.Material.Filled.Newspaper">Articles</MudNavLink>
            <MudNavLink Href="/admin/roles" Icon="@Icons.Material.Filled.LocalParking">Roles</MudNavLink>
            <MudNavLink Href="/admin/subscriptions" Icon="@Icons.Material.Filled.Subscriptions">Subscriptions</MudNavLink>
            <MudNavLink Href="/admin/usersubscriptions" Icon="@Icons.Material.Filled.SupervisedUserCircle">User Subscriptions</MudNavLink>

            @* <AuthorizeView Roles="">
                <MudNavLink Href="/admin/courses" Icon="@Icons.Material.Filled.Book">Courses</MudNavLink>
                <MudNavLink Href="/admin/topics" Icon="@Icons.Material.Filled.LibraryBooks">Topics</MudNavLink>
                <MudNavLink Href="/admin/notes" Icon="@Icons.Material.Filled.Note">Notes</MudNavLink>
                <MudNavLink Href="/admin/Questions" Icon="@Icons.Material.Filled.QuestionAnswer">Questions</MudNavLink>
                <MudNavLink Href="/admin/corrections" Icon="@Icons.Material.Filled.QuestionMark">Corrections</MudNavLink>
                <MudNavLink Href="/admin/Articles" Icon="@Icons.Material.Filled.Newspaper">Articles</MudNavLink>
            </AuthorizeView>
            <AuthorizeView Roles="">
                <MudNavLink Href="/admin/roles" Icon="@Icons.Material.Filled.LocalParking">Roles</MudNavLink>
            </AuthorizeView>
            <AuthorizeView Roles="">
                <MudNavLink Href="/admin/subscriptions" Icon="@Icons.Material.Filled.Subscriptions">Subscriptions</MudNavLink>
            </AuthorizeView>
            <AuthorizeView Roles="">
                <MudNavLink Href="/admin/usersubscriptions" Icon="@Icons.Material.Filled.SupervisedUserCircle">User Subscriptions</MudNavLink>
            </AuthorizeView> *@
            <MudNavLink Href="/home" Icon="@Icons.Material.Filled.ArrowUpward">Go To Medbase</MudNavLink>
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        <MudContainer>
                @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;
    private MudThemeProvider _mudThemeProvider;
    private bool _isDarkMode;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            await _mudThemeProvider.WatchSystemPreference(OnSystemPreferenceChanged);
            StateHasChanged();
        }
    }

    private async Task OnSystemPreferenceChanged(bool newValue)
    {
        _isDarkMode = newValue;
        StateHasChanged();
    }
}