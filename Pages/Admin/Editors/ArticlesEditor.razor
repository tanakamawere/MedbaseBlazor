@page "/admin/articles/edit/{id:int}"
@page "/admin/articles/add"
@using MedbaseBlazor.Pages.Admin.Utilities
@inject IApiRepository repository
@using Markdig

<div class="container px-5 mt-5">
    <div class="row gx-5 align-items-center justify-content-center">
        <div class="col-lg-9 col-xl-8 col-xxl-7">
            <div class="text-center text-xl-start">

                <EditForm Model="Article" OnValidSubmit="SaveChanges">
                    <DataAnnotationsValidator/>
                    <div class="col-form-label">
                        <label>Title</label>
                        <ValidationMessage For="@(() => Article.Title)" />
                        <InputText class="form-control" @bind-Value="Article.Title" />
                    </div>
                    <div class="col-form-label">
                        <label>Body</label>
                        <ValidationMessage For="@(() => Article.Body)" />
                        <MarkdownTextInput class="form-control" @bind-Value="Article.Body" />
                    </div>
                    <div class="col-form-label">
                        <label>Summary</label>
                        <ValidationMessage For="@(() => Article.Summary)" />
                        <InputText class="form-control" @bind-Value="Article.Summary" />
                    </div>
                    <div class="col-form-label">
                        <label>Writer</label>
                        <ValidationMessage For="@(() => Article.Writer)" />
                        <InputText class="form-control" @bind-Value="Article.Writer" />
                    </div>
                    <div class="col-form-label">
                        <label>Date Posted</label>
                        <ValidationMessage For="@(() => Article.DatePosted)" />
                        <InputDate class="form-control" @bind-Value="Article.DatePosted" />
                    </div>
                    <div class="col-form-label">
                        <label>Image URL</label>
                        <ValidationMessage For="@(() => Article.ImageURL)" />
                        <InputText class="form-control" @bind-Value="Article.ImageURL" />
                    </div>
                    <button type="submit" class="btn btn-primary">Save</button>
                </EditForm>
            </div>
        </div>
        <div class="col-xl-4 col-xxl-5 text-center">
            <div class="my-5 text-center text-xl-start form-group">
                <label for="bodyPreview">Body Preview</label>
                <div id="bodyPreview" style="height: 100%;" class="form-control">
                    @((MarkupString)Markdown.ToHtml(Article.Body))
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    public Article Article { get; set; } = new();

    [Parameter]
    public int id { get; set; } = 0;
    [Inject]
    public NavigationManager NavManager { get; set; }

    protected async override Task OnParametersSetAsync()
    {
        if (id != 0)
        {
            Article = await repository.GetArticle(id) ?? new();
        }
    }


    private void SaveChanges()
    {
        if (id == 0)
        {
            repository.PostArticle(Article);
        }
        else
        {
            repository.UpdateArticle(id, Article);
        }
        NavManager.NavigateTo("/admin/articles");
    }
}
