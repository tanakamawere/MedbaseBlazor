@page "/admin/subscriptions/edit/{email}"
@page "/admin/subscriptions/add"
@layout AdminLayout
@inject IApiRepository repository

<style>
    div.validation-message {
        color: rgb(220, 53, 69);
        font-weight: 500
    }
</style>


<EditForm OnSubmit="SaveChanges" Model="Subscription">
    <div class="input-group">
        <span class="input-group-text">RTGS$</span>
        <InputNumber class="form-control" readonly @bind-Value="Subscription.Amount" />
    </div>
    <div class="col-form-label">
        <label asp-for="Email">Email</label>
        <InputText class="form-control" @bind-Value="Subscription.Email" />
    </div>
    <div class="col-form-label">
        <label asp-for="Phone">Phone</label>
        <div class="input-group">
            <span class="input-group-text" id="basic-addon3">+263</span>
            <InputText class="form-control" @bind-Value="Subscription.Phone" />
        </div>
        <div class="form-text">Example: 712234567</div>
    </div>
    <div class="col-form-label">
        <label asp-for="Email">Start Date</label>
        <InputDate class="form-control" @bind-Value="Subscription.StartDate"/>
    </div>
    <div class="col-form-label">
        <label asp-for="Email">End Date</label>
        <InputDate class="form-control" @bind-Value="Subscription.EndDate" />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    [Parameter]
    public string email { get; set; }
    [Inject]
    public NavigationManager NavManager { get; set; }

    public Subscription Subscription { get; set; } = new();


    protected async override Task OnParametersSetAsync()
    {
        if (!string.IsNullOrEmpty(email))
        {
            Subscription = await repository.GetSubscription(email) ?? new();
        }
    }


    private void SaveChanges()
    {
        if (Subscription.Id == 0)
            repository.PostSubscription(Subscription);
        else
            repository.UpdateSubscription(Subscription.Id, Subscription);
        NavManager.NavigateTo("/admin/subscriptions");
    }
}