@page "/admin/topics/edit/{id:int}"
@page "/admin/topics/add"
@layout AdminLayout
@inject IApiRepository repository
@inject ISnackbar Snackbar
@inject NavigationManager navManager


<EditForm Model="Topic" OnValidSubmit="SaveChanges">
    <DataAnnotationsValidator />
    <MudSelect AnchorOrigin="Origin.BottomCenter" For="@(() => Topic.CourseRef)" Label="Course Reference" @bind-Value="Topic.CourseRef">
        @foreach (Course item in Courses)
        {
            <MudSelectItem Value="@item.CourseRef">@item.CourseRef</MudSelectItem>
        }
    </MudSelect>
    <MudNumericField Label="Topic Reference"For="@(() => Topic.TopicRef)" @bind-Value="Topic.TopicRef" />
    <MudTextField Label="Name" @bind-Value="Topic.Name" For="@(() => Topic.Name)" />
    <MudButton Color="Color.Primary" Variant="Variant.Filled" ButtonType="ButtonType.Submit">Submit Question</MudButton>
</EditForm>


@code {
    public Topic Topic { get; set; } = new();
    [Parameter]
    public int id { get; set; } = 0;
    private IEnumerable<Course> Courses { get; set; } = Enumerable.Empty<Course>();
    private IEnumerable<Topic> Topics { get; set; }
    private Snackbar snackbar;

    protected async override Task OnInitializedAsync()
    {
        Courses = await repository.GetCourses();
        Topics = await repository.GetAllTopics();
        Topic.TopicRef = Topics.Last().TopicRef + 1;
    }

    [Inject]
    public NavigationManager NavManager { get; set; }

    protected async override Task OnParametersSetAsync()
    {
        if (id != 0)
        {
            Topic = await repository.GetTopic(id) ?? new();
        }
    }
    private async Task SaveChanges()
    {
        try
        {
            if (id == 0)
            {
                repository.PostTopic(Topic);
            }
            else
            {
                if (await repository.UpdateTopic(Topic))
                {
                    snackbar = Snackbar.Add("Topic updated successfully!", Severity.Success);
                }
                else
                {
                    snackbar = Snackbar.Add("Failed to update question. Please try again.", Severity.Warning);
                }
            }            
        }
        catch (Exception ex)
        {
            snackbar = Snackbar.Add($"An error occurred: {ex.Message}", Severity.Error);
        }
        finally
        {
            navManager.NavigateTo("/admin/topics");
        }
    }
}
