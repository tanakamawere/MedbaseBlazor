@page "/admin/questions/edit/{id:int}"
@page "/admin/questions/editfromtopic/{topicId:int}"
@page "/admin/question/add"
@layout AdminLayout
@inject IApiRepository repository
@using MedbaseLibrary.Models
@using MedbaseBlazor.Pages.Admin.Utilities
@using Markdig


@if (Question is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-4">
            <button @onclick="() => ClearModel()" class="btn btn-primary">Clear Form</button>
        </div>
        <div class="col-8">
            <div class="col-form-label">
                <label>Course</label>
                <select Label="" @onchange="GetCourseTopics">
                    @foreach (Course item in Courses)
                    {
                        <option value="@item.CourseRef">@item.Title</option>
                    }
                </select>
            </div>
        </div>
    </div>
    <EditForm Model="Question" OnSubmit="SaveChanges">
        <DataAnnotationsValidator />
        <div class="row">
            <div class="col-6">
                <MudSelect Label="Topic" @bind-Value="Question.TopicRef">
                    @foreach (Topic item in Topics)
                    {
                        <MudSelectItem Value="@item.TopicRef">@item.Name</MudSelectItem>
                    }
                </MudSelect>
            </div>
            <div class="col-6">
                <MudTextField Label="Question Main" @bind-Value="Question.QuestionMain" />
            </div>
        </div>
        <hr />

        <MudExpansionPanels MultiExpansion="true">
            <MudExpansionPanel Text="Child A" MaxHeight="150">
                <!--Child A-->
                <div class="row">
                    <div class="col-6 col-sm-5 col-md-5">
                        <MudTextField Label="Child A" @bind-Value="Question.ChildA" />
                    </div>
                    <div class="col-1 col-sm-2 col-md-2">
                        <MudSelect Label="Answer A" @bind-Value="Question.AnswerA">
                            <MudSelectItem Value="true">True</MudSelectItem>
                            <MudSelectItem Value="false">False</MudSelectItem>
                        </MudSelect>
                    </div>
                    <div class="col-5 col-sm-5 col-md-5">
                        <MarkdownTextInput Variant="Variant.Outlined" Lines="3" Label="Explanation A (Markdown)" @bind-Value="Question.ExplanationA" />
                    </div>
                </div>
            </MudExpansionPanel>
            <MudExpansionPanel Text="Child B" MaxHeight="150">
                <!--Child B-->
                <div class="row">
                    <div class="col-6 col-sm-5 col-md-5">
                        <MudTextField Label="Child B" @bind-Value="Question.ChildB" />
                    </div>
                    <div class="col-1 col-sm-2 col-md-2">
                        <MudSelect Label="Answer B" @bind-Value="Question.AnswerB">
                            <MudSelectItem Value="true">True</MudSelectItem>
                            <MudSelectItem Value="false">False</MudSelectItem>
                        </MudSelect>
                    </div>
                    <div class="col-5 col-sm-5 col-md-5">
                        <MarkdownTextInput Variant="Variant.Outlined" Lines="3" Label="Explanation B" @bind-Value="Question.ExplanationB" />
                    </div>
                </div>
            </MudExpansionPanel>
            <MudExpansionPanel Text="Child C" MaxHeight="150">
                <!--Child C-->
                <div class="row">
                    <div class="col-6 col-sm-5 col-md-5">
                        <MudTextField Label="Child C" @bind-Value="Question.ChildC" />
                    </div>
                    <div class="col-1 col-sm-2 col-md-2">
                        <MudSelect Label="Answer C" @bind-Value="Question.AnswerC">
                            <MudSelectItem Value="true">True</MudSelectItem>
                            <MudSelectItem Value="false">False</MudSelectItem>
                        </MudSelect>
                    </div>
                    <div class="col-5 col-sm-5 col-md-5">
                        <MarkdownTextInput Variant="Variant.Outlined" Lines="3" Label="Explanation C (As Markdown)" @bind-Value="Question.ExplanationC" />
                    </div>
                </div>
            </MudExpansionPanel>
            <MudExpansionPanel Text="Child D">
                <!--Child D-->
                <div class="row">
                    <div class="col-6 col-sm-5 col-md-5">
                        <MudTextField Label="ChildD" @bind-Value="Question.ChildD" />
                    </div>
                    <div class="col-1 col-sm-2 col-md-2">
                        <MudSelect Label="AnswerD" @bind-Value="Question.AnswerD">
                            <MudSelectItem Value="true">True</MudSelectItem>
                            <MudSelectItem Value="false">False</MudSelectItem>
                        </MudSelect>
                    </div>
                    <div class="col-5 col-sm-5 col-md-5">
                        <MarkdownTextInput Label="Explanation D (As Markdown)" @bind-Value="Question.ExplanationD" />
                    </div>
                </div>
            </MudExpansionPanel>
            <MudExpansionPanel Text="Child E">
                <!--Child E-->
                <div class="row">
                    <div class="col-6 col-sm-5 col-md-5">
                        <MudTextField Label="ChildE" @bind-Value="Question.ChildE" />
                    </div>
                    <div class="col-1 col-sm-2 col-md-2">
                        <MudSelect Label="AnswerE" @bind-Value="Question.AnswerE">
                            <MudSelectItem Value="true">True</MudSelectItem>
                            <MudSelectItem Value="false">False</MudSelectItem>
                        </MudSelect>
                    </div>
                    <div class="col-5 col-sm-5 col-md-5">
                        <MarkdownTextInput Label="Explanation E (As Markdown)" @bind-Value="Question.ExplanationE" />
                    </div>
                </div>
            </MudExpansionPanel>
        </MudExpansionPanels>
        <button class="btn btn-primary" type="submit">Done</button>
    </EditForm>
}

@code {

    public Question Question{ get; set; } = new();
    [Parameter]
    public int id { get; set; } = 0;
    [Parameter]
    public int topicId { get; set; } = 0;
    bool myBool;

    private IEnumerable<Topic> Topics { get; set; } = Enumerable.Empty<Topic>();
    private IEnumerable<Course> Courses { get; set; } = Enumerable.Empty<Course>();


    protected async override Task OnInitializedAsync()
    {
        Courses = await repository.GetCourses();
    }

    [Inject]
    public NavigationManager NavManager { get; set; }

    protected async override Task OnParametersSetAsync()
    {
        if (id != 0)
        {
            Question = await repository.GetQuestion(id) ?? new();
        }
        else
            return;

        if (topicId != 0)
        {
            this.Question = new();
            Question.TopicRef = topicId;
        }
    }

    private async Task GetCourseTopics(ChangeEventArgs e)
    {
        Topics = await repository.GetTopics(e.Value.ToString());
        StateHasChanged();
    }

    private void SaveChanges()
    {
        if (id == 0)
        {
            repository.PostQuestion(Question);
        }
        else
        {
            repository.UpdateQuestion(id, Question);
        }
        NavManager.NavigateTo($"/admin/questions");
    }

    private void ClearModel()
    {
        Question.QuestionMain = string.Empty;
        Question.ChildA = string.Empty;
        Question.ChildB = string.Empty;
        Question.ChildC = string.Empty;
        Question.ChildD = string.Empty;
        Question.ChildE = string.Empty;
        Question.ExplanationA = string.Empty;
        Question.ExplanationB = string.Empty;
        Question.ExplanationC = string.Empty;
        Question.ExplanationD = string.Empty;
        Question.ExplanationE = string.Empty;
    }
}

           