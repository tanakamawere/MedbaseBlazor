@page "/admin/questions/edit/{id:int}"
@page "/admin/questions/editfromtopic/{topicId:int}"
@page "/admin/question/add"
@layout AdminLayout
@inject IApiRepository repository
@using MedbaseBlazor.Models
@using MedbaseBlazor.Pages.Admin.Utilities
@using Markdig


@if (Question is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="Question" OnSubmit="SaveChanges">
        <DataAnnotationsValidator />
        <div class="row">
            <div class="col-2">
                <button @onclick="() => ClearModel()" class="btn btn-primary">Clear Form</button>
            </div>
            <div class="col-4">
                <div class="col-form-label">
                    <label>Topic</label>
                    <InputSelect class="form-control" @bind-Value="Question.TopicRef">
                        @foreach (Topic item in Topics)
                        {
                            <option value="@item.TopicRef">@item.Name</option>
                        }
                    </InputSelect>
                </div>
            </div>
            <div class="col-6">
                <div class="col-form-label">
                    <label>Question Main</label>
                    <InputText class="form-control" @bind-Value="Question.QuestionMain" />
                </div>
            </div>
        </div>
        <hr />

        <!--Child A-->
        <div class="row">
            <div class="col-6 col-sm-5 col-md-5">
                <label>ChildA</label>
                <InputText class="form-control" @bind-Value="Question.ChildA" />
            </div>
            <div class="col-1 col-sm-2 col-md-2">
                <div class="col-form-label">
                    <label>AnswerA</label>
                    <InputSelect class="form-control" @bind-Value="Question.AnswerA">
                        <option value="true">True</option>
                        <option value="false">False</option>
                    </InputSelect>
                </div>
            </div>
            <div class="col-5 col-sm-5 col-md-5">
                <div class="text-center text-xl-start">
                    <div class="col-form-label">
                        <label>Explanation A (As Markdown)</label>
                        <MarkdownTextInput class="form-control" @bind-Value="Question.ExplanationA" />
                    </div>
                </div>
            </div>
        </div>

        <hr />
        <!--Child B-->
        <div class="row">
            <div class="col-6 col-sm-5 col-md-5">
                <label>ChildB</label>
                <InputText class="form-control" @bind-Value="Question.ChildB" />
            </div>
            <div class="col-1 col-sm-2 col-md-2">
                <div class="col-form-label">
                    <label>AnswerB</label>
                    <InputSelect class="form-control" @bind-Value="Question.AnswerB">
                        <option value="true">True</option>
                        <option value="false">False</option>
                    </InputSelect>
                </div>
            </div>
            <div class="col-5 col-sm-5 col-md-5">
                <div class="text-center text-xl-start">
                    <div class="col-form-label">
                        <label>Explanation B (As Markdown)</label>
                        <MarkdownTextInput class="form-control" @bind-Value="Question.ExplanationB" />
                    </div>
                </div>
            </div>
        </div>

        <hr/>
        <!--Child C-->
        <div class="row">
            <div class="col-6 col-sm-5 col-md-5">
                <label>ChildC</label>
                <InputText class="form-control" @bind-Value="Question.ChildC" />
            </div>
            <div class="col-1 col-sm-2 col-md-2">
                <div class="col-form-label">
                    <label>AnswerC</label>
                    <InputSelect class="form-control" @bind-Value="Question.AnswerC">
                        <option value="true">True</option>
                        <option value="false">False</option>
                    </InputSelect>
                </div>
            </div>
            <div class="col-5 col-sm-5 col-md-5">
                <div class="text-center text-xl-start">
                    <div class="col-form-label">
                        <label>Explanation C (As Markdown)</label>
                        <MarkdownTextInput class="form-control" @bind-Value="Question.ExplanationC" />
                    </div>
                </div>
            </div>
        </div>

        <hr />
        <!--Child D-->
        <div class="row">
            <div class="col-6 col-sm-5 col-md-5">
                <label>ChildD</label>
                <InputText class="form-control" @bind-Value="Question.ChildD" />
            </div>
            <div class="col-1 col-sm-2 col-md-2">
                <div class="col-form-label">
                    <label>AnswerD</label>
                    <InputSelect class="form-control" @bind-Value="Question.AnswerD">
                        <option value="true">True</option>
                        <option value="false">False</option>
                    </InputSelect>
                </div>
            </div>
            <div class="col-5 col-sm-5 col-md-5">
                <div class="text-center text-xl-start">
                    <div class="col-form-label">
                        <label>Explanation D (As Markdown)</label>
                        <MarkdownTextInput class="form-control" @bind-Value="Question.ExplanationD" />
                    </div>
                </div>
            </div>
        </div>

        <hr />
        <!--Child E-->
        <div class="row">
            <div class="col-6 col-sm-5 col-md-5">
                <label>ChildE</label>
                <InputText class="form-control" @bind-Value="Question.ChildE" />
            </div>
            <div class="col-1 col-sm-2 col-md-2">
                <div class="col-form-label">
                    <label>AnswerE</label>
                    <InputSelect class="form-control" @bind-Value="Question.AnswerE">
                        <option value="true">True</option>
                        <option value="false">False</option>
                    </InputSelect>
                </div>
            </div>
            <div class="col-5 col-sm-5 col-md-5">
                <div class="text-center text-xl-start">
                    <div class="col-form-label">
                        <label>Explanation E (As Markdown)</label>
                        <MarkdownTextInput class="form-control" @bind-Value="Question.ExplanationE" />
                    </div>
                </div>
            </div>
        </div>

        <button class="btn btn-primary" type="submit">Done</button>
    </EditForm>
}

@code {

    public Question Question{ get; set; } = new();
    [Parameter]
    public int id { get; set; } = 0;
    [Parameter]
    public int topicId { get; set; } = 0;
    bool myBool;

    private IEnumerable<Topic> Topics { get; set; } = Enumerable.Empty<Topic>();

    protected async override Task OnInitializedAsync()
    {
        Question = await repository.GetQuestion(id);
        Topics = await repository.GetAllTopics();
    }

    [Inject]
    public NavigationManager NavManager { get; set; }

    protected async override Task OnParametersSetAsync()
    {
        if (id != 0)
        {
            Question = await repository.GetQuestion(id) ?? new();
        }

        if (topicId != 0)
        {
            this.Question = new();
            Question.TopicRef = topicId;
        }
    }

    private void SaveChanges()
    {
        if (id == 0)
        {
            repository.PostQuestion(Question);
        }
        else
        {
            repository.UpdateQuestion(id, Question);
        }
        NavManager.NavigateTo($"/admin/questions");
    }

    private void ClearModel()
    {
        Question.QuestionMain = string.Empty;
        Question.ChildA = string.Empty;
        Question.ChildB = string.Empty;
        Question.ChildC = string.Empty;
        Question.ChildD = string.Empty;
        Question.ChildE = string.Empty;
        Question.ExplanationA = string.Empty;
        Question.ExplanationB = string.Empty;
        Question.ExplanationC = string.Empty;
        Question.ExplanationD = string.Empty;
        Question.ExplanationE = string.Empty;
    }
}

           